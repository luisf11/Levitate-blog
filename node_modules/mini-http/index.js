'use strict';

var http            = require('http');
var path            = require('path');
var fs              = require('fs');
var url             = require('url');
var configs         = require('./lib/configs.js');
var app             = require('./lib/index.js');
var server          = {};

// console.log(app);

var middleware = function (req, res) {
  var parsedUrl   = url.parse(req.url);
  req.query       = parsedUrl.query;
  req.url         = parsedUrl.pathname;
  req.path        = path.resolve(server.root);
  req.path        = path.join(server.root, req.url);
  req.path        = req.path.replace(/%20/g, " ");


  app.viewEngine(req, res);
  app.setContentType(req, res);
};


var render404 = function (req, res, currentPath) {
  res.writeHead(404, { "Content-Type": "text/html" });

  if ( req.url === "/" && server.slash ) {
    var obj = {
      currentPath: currentPath, filesLength: "0", availableList: "",
      errMsg: "<small>Make sure the file you requested exists</small>"
    };
    return res.render(__dirname+"/error.html", obj);
  }

  return fs.readdir(currentPath, function (err, files) {

    if (err) {
      var obj = {
        currentPath: currentPath, filesLength: "0", availableList: "",
        errMsg: "<small>Make sure the file you requested exists</small>"
      };
      return res.render(__dirname+"/error.html", obj);
    }

    var availableList = "", filesLength = files.length;

    for (var i = 0; i < filesLength; i++) {

      if (req.url.charAt(req.url.length-1) !== "/") availableList += '<li><a href="/'+req.url.slice(1)+"/"+files[i]+'"> '+files[i]+"</a></li>";
      else availableList += '<li><a href="'+req.url+files[i]+'"> '+files[i]+"</a></li>";

    }

    var obj = {currentPath: currentPath, filesLength: filesLength, availableList: availableList, errMsg: "" };
    return res.render(__dirname+"/error.html", obj);
  });
};


server.start = function (config) {

  if (Object.prototype.toString.call(config) !== "[object Object]") {
    console.log('\n \x1b[41m', 'invalid configs' ,'\x1b[0m');
    console.log('Expected Object as a params');
    console.log('\n starting with the defaults config \n');
  }

  configs.overwrite(configs, server, config);

  http.createServer(function (req, res) {

    middleware(req, res);

    if (req.url === "/" && server.slash) req.path = path.join(server.root, server.slash);

    return fs.readFile(req.path, 'utf8', function (err, data) {
      if (err) return render404(req, res, req.path);
      return res.send(data);
    });

  }).on('error', function (err) {

    if (err.code === "EADDRINUSE") console.log("port:%s is in use right now try to start the server with another port", server.port);
    else console.log("Unexpected ERROR please try to change your configs first \n", server);

  }).listen(server.port, function () {

    console.log(server.startingMsg, server.port);

    if (server.log) console.log('\n server configs: \n', server);

  });
};


module.exports.serve = server.start;
