/*

* app default configs *

script to set new configs or retrieve the defaults

*/

'use strict';

var configs = {
  port: process.env.PORT || 8080,
  slash: false,
  log: false,
  root: process.cwd() || __dirname,
  routes: false,
  startingMsg: "server started at port %s "
}

var set = function (server, config, defaults) {
  if (defaults) {

    server.port          = !config.port         && defaults.port          || config.port;
    server.slash         = !config.slash        && defaults.slash         || config.slash;
    server.root          = !config.root         && defaults.root          || config.root;
    server.log           = !config.log          && defaults.log           || config.log;
    server.startingMsg   = !config.startingMsg  && defaults.startingMsg   || config.startingMsg;

    return server;

  } else {

    server.port          = config && config.port          || configs.port;
    server.slash         = config && config.slash         || configs.slash;
    server.root          = config && config.root          || configs.root;
    server.log           = config && config.log           || configs.log;
    server.startingMsg   = config && config.startingMsg   || configs.startingMsg;

    return server;
  }
};

var overwrite = function (configs, server, config) {

  try {
    var defaults = require(process.cwd()+'/mini-http.json');
    var custom = {};
    custom = configs.set(server, config, defaults);

    return server = configs.set(server, custom);
  } catch (e) {
    if (e.code === "MODULE_NOT_FOUND") {
      console.log("\ncouldn't find mini-http.json file in your project\n");
    } else {
      console.log("\nmini-http.json file is broken: \n %s \n", e.message);
    }
    try {
      var defaults = require('./mini-http.json');
      var custom = {};
      custom = configs.set(server, config, defaults);

      return server = configs.set(server, custom);
    } catch (e) {
      // console.log('\n \x1b[41m', 'can\'t load user-defaults' ,'\x1b[0m');
      // console.log("\nyour default configs is broken try to reset it using 'mini-http --set'\n");
      console.log("\ncouldn't find global mini-http.json file\nYou can aviod this error by typing 'mini-http --set' \nto reset your global configs or ignore it simply!\n");

      return server = configs.set(server, config);

    }

  }

};

var get = function () {
  return configs;
}

module.exports = {
  set: set,
  overwrite: overwrite,
  get: get,
  init: "init"
};
